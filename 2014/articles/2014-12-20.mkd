Title:    언어 처리와 트라이
Package:  Seoul.pm
Category: perl
Category: Seoul.pm
Author:   corpus007

저자
-----

[@corpus007][twitter-corpus007] - I like:
Perl, Unix, History, Chocolate, Yiquan, Kimchi stew, Bread, Science Fiction, Korea Girl Group ^__^,
[홈페이지][home-corpus007]


시작하며
---------

[트라이(trie)][wiki-trie]는 트리와 유사한 자료 구조로
주로 문자열 등에 대한 동적 집합 혹은 연관 배열을 저장합니다.
키 값의 전체가 아닌 일부만 비교하는데 사용되므로 매우 빠르게 비교를 수행합니다.
이런 연유로 정보 검색(Information Retrieval)이나 언어처리(NLP)에서
은근히 자주 다루는 자료 구조입니다.
트라이의 창시자는 [Edward Fredkin 교수][wiki-fredkin]로
*reTRIEval*에 유용하다고 trie라 명명했다고 합니다.
펄에서 트라이를 손쉽게 사용할 수 있도록 도와주는
[Tree::Trie라는 멋진 모듈][cpan-tree-trie]을 살펴보죠. :)


* 모듈 인스톨
늘 그렇듯이 cpan이나 cpanm으로 가볍게 인스톨해 줍니다.
관리자(admin) 권한이 있다면 아래처럼
$sudo cpanm Tree::Trie
만일, 관리자 권한이 없다면 개인 계정에 인스톨하면 됩니다.
$cpanm Tree:Trie

* 예제를 통한 모듈 맛보기
다행히 멀티 랭귀지를 지원하는 덕분에 한글단어들을 이용한 간단한 예제를 만들어 봤습니다.
<code>
#!/usr/bin/env perl
use Tree::Trie;
use strict;

my $trie = new Tree::Trie;
$trie->add(qw[사람 사냥꾼 사슴 가자미 가재 가마 사재기 사계절
가마 가솔린 나무 나비 다다미 다슬기 사루만 가마꾼 나방]);
</code>
Trie 모듈을 임포트(use)한 다음,  new() 메소드로 가볍게 $trie 객체를 만듭니다.
설명의 편의를 위해 예제 데이터는 코드 안에 기술하였는데, list에 담긴 문자열 데이터들을 add() 메소드로
담을 수 있습니다.
new() 메소드 안에도 여러 옵션을 쓸 수 있습니다. 
또, 개별 단어별로 add() 메소드를 반복해서 사용할 수 도있고, 기존에 만들어진 trie 객체를 추가(add_all 메소드)할 
수도 있습니다만,  설명의 편의를 위해 생략하니 더 자세한 사항은 문서를 참조해 주세요

<code>
my(@all) = $trie->lookup("");
$" = "--";
print "<모든 데이터셋>:\n";
print "@all\n";

print "<가>:\n";
my(@ga_s) = $trie->lookup("가");
print "@ga_s\n";

print "<가마>:\n";
my(@gama_s) = $trie->lookup("가마");
print "@gama_s\n";
</code>

trie 모듈에서 핵심되는 메소드가 바로 lookup()입니다. lookup()은 주어진 문자열(string)으로 시작되는 모든 문자열들을
tire 구조내에서 검색한 다음에 그 결과를 list로 만들어서 돌려줍니다.
$"는 결과 값 들 사이의 구분자를 정의하는데 쓰입니다.
결과는 아래와 같습니다.

<code>
[junhong@MacBook:Perl_study]$./trie.pl 
<모든 데이터셋>:
가재--가자미--가솔린--가마꾼--가마--사냥꾼--사루만--사람--사슴--사재기--사계절--다슬기--다다미--나방--나비--나무
<가>:
가재--가자미--가솔린--가마꾼--가마
<가마>:
가마꾼--가마
</code>
결과가 꽤 깔끔하게 나오죠?

* 더 나아가기
검색(IR)이나 언어처리쪽에서는 이 트라이를 이용한 여러 응용 및 연구가 있습니다.
대표적으로, 트라이를 이용해서 특정한 기능을 위한 사전(dictionary)를 구축하여 사용되는데요. 
일례로, 웹 검색 시스템의 query bar나 휴대폰의 가상 키보드에서 흔히 볼 수 있는 입력스트링에 따른 단어 자동완성이나
추천 검색어 제시에 사용되거나, 기타 단어 교정, 전문가 사전 시스템 구축 등에 사용됩니다.
좀 더 advanced한 활용이나 진지한 학습(research), 시험 등에 사용되기 위해 필요한 부가적인 메소들도 제공되고 있습니다.
이런 사항들은, tire 자료구조 자체에 대한 이해를 필요로 하기 때문에 이런 부분들은 tire 모듈의 다큐먼트와 다른 자료들을 
참고해 주시기 바랍니다.
분명한 건, 언어처리로 트라이 구조를 고려하거나 학습하려 하는 이들에게 이 Tree::Trie 모듈은 매우 좋은 시작점이자 길잡이가 될 수 있다는 것입니다.
 

[cpan-tree-trie]:       https://metacpan.org/module/Tree::Trie
[home-corpus007]:       http://corpus.egloos.com/
[wiki-fredkin]:         http://en.wikipedia.org/wiki/Edward_Fredkin
[wiki-trie]:            http://en.wikipedia.org/wiki/Trie
